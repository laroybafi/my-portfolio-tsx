/// <reference path="../../../../types/misc.d.ts" />
import type NextServer from '../../next-server';
import type { NextConfigComplete } from '../../config-shared';
export declare function createIpcServer(server: InstanceType<typeof NextServer>): Promise<{
    ipcPort: number;
    ipcServer: import('http').Server;
    ipcValidationKey: string;
}>;
export declare const createWorker: (ipcPort: number, ipcValidationKey: string, isNodeDebugging: boolean | 'brk' | undefined, type: 'pages' | 'app', nextConfig: NextConfigComplete) => Promise<import("jest-worker").Worker & {
    initialize: typeof import('../render-server').initialize;
    deleteCache: typeof import('../render-server').deleteCache;
    deleteAppClientCache: typeof import('../render-server').deleteAppClientCache;
    clearModuleContext: typeof import('../render-server').clearModuleContext;
    propagateServerField: typeof import('../render-server').propagateServerField;
}>;
